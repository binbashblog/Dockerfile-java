###
### Build WAR file
###
FROM maven:3.8.4-jdk-8 as builder

# Proxy
ENV http_proxy 'http://proxy.local:8080'
ENV https_proxy 'http://proxy.local:8080'
ENV no_proxy 'localhost, 127.0.0.1, .svc.cluster.local'

# create build dir for source
RUN mkdir -p /build
WORKDIR /build
COPY pom.xml /build
COPY settings.xml /build

# download any required dependencies
#RUN mvn -B dependency:resolve dependency:resolve-plugins

# Copy source code
COPY src /build/src

# Build app
RUN mvn -B clean package -s settings.xml

###
### Build Tomcat
###
FROM tomcat:9-jdk8 as final

# Proxy
ENV http_proxy 'http://proxy.local:8080'
ENV https_proxy 'http://proxy.local:8080'
ENV no_proxy 'localhost, 127.0.0.1, .svc.cluster.local'

# Update the image
RUN apt-get update && apt-get -y upgrade

# Set up the dir structure
RUN rm -fr /usr/local/tomcat/webapps  \
    && mv /usr/local/tomcat/webapps.dist /usr/local/tomcat/webapps \
    && mkdir -p /usr/local/tomcat/conf

# Copy...
COPY tomcat-users.xml /usr/local/tomcat/conf/
COPY context.xml /usr/local/tomcat/webapps/manager/META-INF/
COPY logback-master.xml /usr/local/tomcat/lib/

# Copy the war file generated by maven
COPY --from=builder /build/target/*.war /usr/local/tomcat/webapps/

# Debug port (turn off in production)
#ENV JPDA_ADDRESS="8005"
#ENV JPDA_TRANSPORT="dt_socket"

#EXPOSE 8080 8005
EXPOSE 8080
#ENTRYPOINT ["catalina.sh", "jpda", "run"]
ENTRYPOINT ["catalina.sh", "run"]
